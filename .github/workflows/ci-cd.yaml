name: CI/CD with Trivy + SonarCloud + Argo CD

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: sathish404/demo-nginx-argocd

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get short SHA tag
      id: vars
      run: echo "TAG=sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }}

    # -------- Trivy Security Scan --------
    - name: Run Trivy scan (JSON)
      run: |
        docker run --rm -v ${{ github.workspace }}:/root aquasec/trivy:latest \
          image --format json --output /root/trivy-report.json \
          ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }}

    - name: Fail if critical vulnerabilities found
      run: |
        count=$(jq '[.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Severity=="CRITICAL")] | length' trivy-report.json)
        echo "Found $count critical vulnerabilities"
        if [ "$count" -gt 0 ]; then
          echo "‚ùå Build failed due to critical vulnerabilities"
          exit 1
        fi

    - name: Upload Trivy JSON report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json

    # -------- SonarCloud Static Code Analysis --------
    - name: Set up Java (required by SonarCloud CLI)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # -------- GitOps Update Manifest --------
    - name: Update image tag in deployment.yaml
      run: |
        sed -i "s|image: .*|image: ${IMAGE_NAME}:${{ steps.vars.outputs.TAG }}|" k8s/deployment.yaml

    - name: Commit and push updated manifest
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add k8s/deployment.yaml
        git commit -m "Update image tag to ${{ steps.vars.outputs.TAG }}"
        git push
